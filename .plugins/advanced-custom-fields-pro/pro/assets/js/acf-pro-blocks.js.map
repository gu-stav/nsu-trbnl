{"version":3,"sources":["../build/js/_acf-blocks.js"],"names":["$","undefined","registerBlockType","blockType","wp","blocks","allowedTypes","post_types","result","length","push","postType","acf","screen","getPostType","indexOf","icon","substr","iconHTML","React","createElement","RawHTML","html","parseArgs","title","name","category","attributes","id","type","data","align","mode","edit","props","Block","save","blockTypes","registerBlockTypes","get","map","getBlockType","getBlocks","args","select","k","filter","block","fetchBlock","query","ajax","url","dataType","cache","prepareForAjax","action","JSON","stringify","parseNode","node","nodeName","toLowerCase","editor","slice","call","forEach","_ref","value","childNodes","child","Text","text","textContent","trim","apply","this","addAction","parseJSX","$el","_React$Component","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","setAttributes","bind","_assertThisInitialized","setup","_inherits","_createClass","key","restrictMode","modes","_this$props","_blocks","uniqid","render","toggleMode","_this$props2","isSelected","console","log","Fragment","element","_wp$editor","BlockControls","InspectorControls","_wp$components","components","Toolbar","IconButton","PanelBody","Button","showToggle","supports","toggleText","__","toggleIcon","className","label","onClick","BlockForm","BlockPreview","Component","_React$Component2","arguments","dangerouslySetInnerHTML","__html","store","DynamicHTML","_React$Component3","_this2","getData","init","defaults","setData","_objectSpread","setHtml","_this$setData","datahtml","_defineProperty","display","_this3","_wp$components2","Placeholder","Spinner","ref","el","componentDidRemount","componentDidInitialize","componentDidRender","componentDidMount","exists","reusableBlock","fetch","doAction","componentWillUnmount","_DynamicHTML","concat","_this4","form","done","json","_get","prototype","_this$props3","timeout","on","e","clearTimeout","setTimeout","serialize","_DynamicHTML2","_this5","preview","componentDidUpdate","prevProps","prevJSON","thisJSON","jQuery"],"mappings":"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","sourcesContent":["(function($, undefined){\n\t\n\t// Storage for registered block types.\n\tconst blockTypes = {};\n\t\n\t// Storage for block instances.\n\tconst blocks = {};\n\t\n\t/**\n\t * registerBlockType\n\t *\n\t * Registers a single block type.\n\t *\n\t * @date\t19/2/19\n\t * @since\t5.7.12\n\t *\n\t * @param\tobject blockType The block type settings localized from PHP.\n\t * @return\tobject The result from wp.blocks.registerBlockType().\n\t */\n\tfunction registerBlockType( blockType ) {\n\t\t\n\t\t// Bail early if wp.blocks does not exist.\n\t\tif( !wp || !wp.blocks || !wp.blocks.registerBlockType ) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// Bail ealry if is excluded post_type.\n\t\tvar allowedTypes = blockType.post_types || [];\n\t\tif( allowedTypes.length ) {\n\t\t\t\n\t\t\t// Always allow block to appear on \"Edit reusable Block\" screen.\n\t\t\tallowedTypes.push('wp_block');\n\t\t\t\n\t\t\t// Check post type.\n\t\t\tvar postType = acf.screen.getPostType();\n\t\t\tif( allowedTypes.indexOf(postType) === -1 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Handle svg HTML.\n\t\tif( typeof blockType.icon === 'string' && blockType.icon.substr(0, 4) === '<svg' ) {\n\t\t\tconst iconHTML = blockType.icon;\n\t\t\tblockType.icon = <RawHTML html={iconHTML} />;\n\t\t}\n\t\t\n\t\t// Merge in block settings.\n\t\tblockType = acf.parseArgs(blockType, {\n\t\t\t\n\t\t\t// Basic required settings.\n\t\t\ttitle: '',\n\t\t\tname: '',\n\t\t\tcategory: '',\n\t\t\t\n\t\t\t// Leave default undefined to allow WP to serialize attributes in HTML comments.\n\t\t\t// See https://github.com/WordPress/gutenberg/issues/7342\n\t\t\tattributes: {\n\t\t\t\tid: { \n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tdata: { \n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\tname: { \n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\talign: {\n\t\t            type: 'string'\n\t\t        },\n\t\t        mode: {\n\t\t            type: 'string'\n\t\t        }\n\t\t\t},\n\t\t\t\n\t\t\t// Edit callback.\n\t\t\tedit: function( props ){\n\t\t\t\treturn <Block {...props} />;\n\t\t\t},\n\t\t\t\n\t\t\t// Save callback.\n\t\t\tsave: function(){\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Add to storage.\n\t\tblockTypes[ blockType.name ] = blockType;\n\t\t\n\t\t// Register with WP.\n\t\tvar result = wp.blocks.registerBlockType( blockType.name, blockType );\n\t\t\n\t\t// Return result.\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * registerBlockTypes\n\t *\n\t * Registers the localized block types.\n\t *\n\t * @date\t19/2/19\n\t * @since\t5.7.12\n\t *\n\t * @param\tvoid\n\t * @return\tvoid\n\t */\n\tfunction registerBlockTypes() {\n\t\tvar blockTypes = acf.get('blockTypes');\n\t\tif( blockTypes ) {\n\t\t\tblockTypes.map( registerBlockType );\n\t\t}\n\t}\n\t\n\t// Register blocks during when ready.\n\tacf.addAction( 'ready', registerBlockTypes );\n\t\n\t/**\n\t * getBlockType\n\t *\n\t * Returns a specific block type for the given name.\n\t *\n\t * @date\t20/2/19\n\t * @since\t5.7.12\n\t *\n\t * @param\tstring name The block name.\n\t * @return\t(object|false)\n\t */\n\tfunction getBlockType( name ) {\n\t\treturn blockTypes[ name ] || false;\n\t}\n\t\n\t/**\n\t * getBlocks\n\t *\n\t * Returns an array of ACF blocks for the given args\n\t *\n\t * @date\t27/2/19\n\t * @since\t5.7.13\n\t *\n\t * @param\tobject args An object of key=>value pairs used to filter results.\n\t * @return\tarray.\n\t */\n\tfunction getBlocks( args ) {\n\t\t\n\t\t// Get all blocks\n\t\tlet blocks = wp.data.select( 'core/editor' ).getBlocks();\n\t\t\n\t\t// Loop over args and filter.\n\t\tfor( var k in args ) {\n\t\t\tblocks = blocks.filter( block => (block.attributes[k] === args[k]) );\n\t\t}\n\t\t\n\t\t// Return results.\n\t\treturn blocks;\n\t}\n\t\n\t/**\n\t * fetchBlock\n\t *\n\t * Queries the AJAX API.\n\t *\n\t * @date\t28/2/19\n\t * @since\t5.7.13\n\t *\n\t * @param\tobject block The block props.\n\t * @query\tobject The query args used in AJAX callback.\n\t * @return\tobject The AJAX promise.\n\t */\n\tfunction fetchBlock( block, query ) {\n\t\treturn $.ajax({\n\t    \turl: acf.get('ajaxurl'),\n\t\t\tdataType: 'json',\n\t\t\ttype: 'post',\n\t\t\tcache: false,\n\t\t\tdata: acf.prepareForAjax({\n\t\t\t\taction:\t'acf/ajax/fetch-block',\n\t\t\t\tblock: JSON.stringify(block),\n\t\t\t\tquery: query\n\t\t\t})\n\t\t});\n\t}\n\t\n\t/**\n\t * acf.parseJSX\n\t *\n\t * Converts a DOM node into a React element.\n\t *\n\t * @date\t12/3/19\n\t * @since\t5.7.14\n\t *\n\t * @param\tobject $el A jQuery element.\n\t * @return\tobject result of React.createElement().\n\t */\n\tacf.parseJSX = function( $el ) {\n\t\treturn parseNode( $el[0] );\n\t};\n\t\n\tfunction parseNode( node ) {\n\t\t\n\t\t// React.createElement() args.\n\t\tvar args = [];\n\t\t\n\t\t// Add node name to args.\n\t\tvar nodeName = node.nodeName.toLowerCase();\n\t\tfor( var k in wp.editor ) {\n\t\t\tif( k.toLowerCase() === nodeName ) {\n\t\t\t\tnodeName = wp.editor[ k ];\n\t\t\t}\n\t\t}\n\t\targs[0] = nodeName;\n\t\t\n\t\t// Generate list of attributes.\n\t\targs[1] = {};\n\t\t[].slice.call(node.attributes).forEach( ({ name, value }) => {\n\t\t\tname = (name === 'class') ? 'className' : name;\n\t\t\targs[1][ name ] = value;\n\t\t});\n\t\t\n\t\t// Loop over children.\n\t\t[].slice.call(node.childNodes).forEach(function( child ){\n\t\t\tif( child instanceof Text ) {\n\t\t\t\tvar text = child.textContent.trim();\n\t\t\t\tif( text ) {\n\t\t\t\t\targs.push( text );\n\t\t\t\t}\t\t\t\n\t\t\t} else {\n\t\t\t\targs.push( parseNode(child) );\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Return element.\n\t\treturn React.createElement.apply( this, args );\n\t};\n\t\n\t/**\n\t * Block Class.\n\t *\n\t * A react componenet to handle the ACF block.\n\t *\n\t * @date\t19/2/19\n\t * @since\t5.7.12\n\t *\n\t * @param\tstring id the block id.\n\t * @return\tvoid\n\t */\n\tclass Block extends React.Component {\n\t\t\n\t\tconstructor( props ) {\n\t\t\t\n\t\t\t// Call required super.\n\t\t\tsuper( props );\n\t\t\t\n\t\t\t// Bind callbacks.\n\t\t\tthis.setAttributes = this.setAttributes.bind( this );\n\t\t\t\n\t\t\t// Initialize block.\n\t\t\tthis.setup();\n\t\t}\n\t\t\n\t\tsetup() {\n\t\t\t\n\t\t\t// Extract props.\n\t\t\tconst { name, attributes } = this.props;\n\t\t\t\n\t\t\t// Get block type.\n\t\t\tconst blockType = getBlockType( name );\n\t\t\t\n\t\t\t// Scenario #1\n\t\t\t// Component is a newly added block without any attributes.\n\t\t\tif( !attributes.id ) {\n\t\t\t\t\n\t\t\t\t// Set default attributes.\n\t\t\t\tattributes.id = acf.uniqid('block_');\n\t\t\t\tattributes.name = blockType.name;\n\t\t\t\tattributes.mode = attributes.mode || blockType.mode;\n\t\t\t\tattributes.align = attributes.align || blockType.align;\n\t\t\t\tattributes.data = attributes.data || blockType.data;\n\t\t\t\t\n\t\t\t// Scenario #2\n\t\t\t// Component is a duplicated block.\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t// Find blocks with the same id (this block).\n\t\t\t\tlet blocks = getBlocks({ id: attributes.id });\n\t\t\t\t\n\t\t\t\t// If more an 1 block is found, this is a duplicate who requires a fresh id.\n\t\t\t\t// Manually set the attributes.id to allow this.render() to bail early and avoid DynamicHTML component issues.\n\t\t\t\tif( blocks.length > 1 ) {\n\t\t\t\t\tattributes.id = acf.uniqid('block_');\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Restrict modes.\n\t\t\tfunction restrictMode( modes ) {\n\t\t\t\tif( modes.indexOf(attributes.mode) === -1 ) {\n\t\t\t\t\tattributes.mode = modes[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Edit.\n\t\t\tif( blockType.mode === 'edit' ) {\n\t\t\t\trestrictMode( ['edit', 'preview'] );\n\t\t\t\n\t\t\t// Preview.\n\t\t\t} else if( blockType.mode === 'preview' ) {\n\t\t\t\trestrictMode( ['preview', 'edit'] );\n\t\t\t\n\t\t\t// Auto.\n\t\t\t} else {\n\t\t\t\trestrictMode( ['auto'] );\n\t\t\t}\n\t\t}\n\t\t\n\t\tsetAttributes( attributes ) {\n\t\t\tthis.props.setAttributes( attributes );\n\t\t}\n\t\t\n\t\trender() {\n\t\t\t//console.log('Block.render', this.props.clientId, this);\n\t\t\t// Extract props.\n\t\t\tconst { name, attributes, isSelected, setAttributes } = this.props;\n\t\t\tconst { mode } = attributes;\n\t\t\t\n\t\t\t// Bail early if no id.\n\t\t\t// This scenario occurs when first initialising a new block.\n\t\t\t// Todo: Remove.\n\t\t\tif( !attributes.id ) {\n\t\t\t\tconsole.log('NO ID!');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\t// Get block type.\n\t\t\tconst blockType = getBlockType( name );\n\t\t\t\n\t\t\t// Get components.\n\t\t\tconst { Fragment } = wp.element;\n\t\t\tconst { BlockControls, InspectorControls } = wp.editor;\n\t\t\tconst { Toolbar, IconButton, PanelBody, Button } = wp.components;\n\t\t\t\n\t\t\t// Show toggle only for edit/preview modes.\n\t\t\tlet showToggle = blockType.supports.mode;\n\t\t\tif( mode === 'auto' ) {\n\t\t\t\tshowToggle = false;\n\t\t\t}\n\t\t\t\n\t\t\t// Configure toggle variables.\n\t\t\tconst toggleText = ( mode === 'preview' ) ? acf.__('Switch to Edit') : acf.__('Switch to Preview');\n\t\t\tconst toggleIcon = ( mode === 'preview' ) ? 'edit' : 'welcome-view-site';\n\t\t\tfunction toggleMode() {\n\t\t\t\tsetAttributes({ \n\t\t\t\t\tmode: ( mode === 'preview' ) ? 'edit' : 'preview'\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// Return template.\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\n\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t{ showToggle &&\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tclassName=\"components-icon-button components-toolbar__control\"\n\t\t\t\t\t\t\t\t\tlabel={ toggleText }\n\t\t\t\t\t\t\t\t\ticon={ toggleIcon }\n\t\t\t\t\t\t\t\t\tonClick={ toggleMode }\n\t\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t}\n\t\t\t\t\t</BlockControls>\n\t\t\t\t\t\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<div className=\"acf-block-component acf-block-panel\">\n\t\t\t\t\t\t\t<div className=\"acf-block-panel-actions\">\n\t\t\t\t\t\t\t\t{ showToggle &&\n\t\t\t\t\t\t\t\t\t<Button className=\"button\" onClick={ toggleMode }>\n\t\t\t\t\t\t\t\t\t\t{ toggleText }\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{ mode === 'preview' &&\n\t\t\t\t\t\t\t\t<BlockForm {...this.props} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"acf-block-component acf-block-body\">\n\t\t\t\t\t\t{ mode === 'auto' && isSelected ?\n\t\t\t\t\t\t\t<BlockForm {...this.props} />\n\t\t\t\t\t\t: mode === 'auto' && !isSelected ?\n\t\t\t\t\t\t\t<BlockPreview {...this.props} />\n\t\t\t\t\t\t: mode === 'preview' ? \n\t\t\t\t\t\t\t<BlockPreview {...this.props} />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<BlockForm {...this.props} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</Fragment>\n\t        );\n\t\t}\n\t}\n\t\t\n\t/**\n\t * RawHTML Class.\n\t *\n\t * A react component to insert raw HTMl.\n\t *\n\t * @date\t19/2/19\n\t * @since\t5.7.12\n\t *\n\t * @param\tstring html The html to insert.\n\t * @return\tvoid\n\t */\n\tclass RawHTML extends React.Component {\n\t\trender() {\n\t\t\treturn <div dangerouslySetInnerHTML={{__html: this.props.html}} />\n\t\t}\n\t}\n\t\n\t// Data storage for DynamicHTML components.\n\tconst store = {};\n\t\n\t/**\n\t * DynamicHTML Class.\n\t *\n\t * A react componenet to load and insert dynamic HTML.\n\t *\n\t * @date\t19/2/19\n\t * @since\t5.7.12\n\t *\n\t * @param\tvoid\n\t * @return\tvoid\n\t */\n\tclass DynamicHTML extends React.Component {\n\t\t\n\t\tconstructor( props ) {\n\t\t\t\n\t\t\t// Call Super.\n\t\t\tsuper( props );\n\t\t\t\n\t\t\t// Config.\n\t\t\tthis.setup( props );\n\t\t\t\n\t\t\t// Load data.\n\t\t\tthis.data = this.getData({\n\t\t\t\thtml: '',\n\t\t\t\t$el: false,\n\t\t\t\tinit: false\n\t\t\t});\n\t\t}\n\t\t\n\t\tsetup( props ){\n\t\t\tthis.id = '';\n\t\t}\n\t\t\n\t\tgetData( defaults ) {\n\t\t\treturn store[ this.id ] || defaults;\n\t\t}\n\t\t\n\t\tsetData( data ) {\n\t\t\tthis.data = store[ this.id ] = { ...this.data, ...data };\n\t\t}\n\t\t\n\t\tsetHtml( html ) {\n\t\t\t\n\t\t\t// trim html.\n\t\t\thtml = html.trim();\n\t\t\t\n\t\t\t// bail early if html is the same.\n\t\t\tif( html === this.datahtml ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// Create new jQuery element.\n\t\t\tconst $el = $( html );\n\t\t\t\n\t\t\t// Store data.\n\t\t\tthis.setData({\n\t\t\t\thtml: html,\n\t\t\t\t$el, $el,\n\t\t\t\tinit: false\n\t\t\t});\n\t\t\t\n\t\t\t// Display new HTML.\n\t\t\tthis.display();\n\t\t}\n\t\t\n\t\trender() {\n\t\t\t\n\t\t\t// Extract components.\n\t\t\tconst { Placeholder, Spinner } = wp.components;\n\t\t\t\n\t\t\t// Return container including loading placeholder.\n\t\t\t// Display function will update DOM via this.el reference and React will never know.\n\t\t\treturn (\n\t\t\t\t<div ref={el => this.el = el} >\n\t\t\t\t\t<Placeholder>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</Placeholder>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\t\n\t\tdisplay() {\n\t\t\t\t\t\n\t\t\t// Move $el into placeholder.\n\t\t\t$(this.el).html( this.data.$el );\n\t\t\t\n\t\t\t// Detect if $el is being added for the first time.\n\t\t\tif( !this.data.init ) {\n\t\t\t\tthis.setData({\n\t\t\t\t\tinit: true\n\t\t\t\t});\n\t\t\t\tthis.componentDidInitialize();\n\t\t\t\n\t\t\t// Otherwise it is remounting for the nth time.\n\t\t\t} else {\n\t\t\t\tthis.componentDidRemount();\n\t\t\t}\n\t\t\t\n\t\t\t// Call generic render callback.\n\t\t\tthis.componentDidRender();\n\t\t}\n\t\t\n\t\tcomponentDidMount() {\n\t\t\t\n\t\t\t// Decide whether to display or fetch.\n\t\t\tlet exists = ( this.data.$el ? true : false );\n\t\t\t\n\t\t\t// Avoid duplicate DOM issues with reusable blocks and always fetch.\n\t\t\tif( this.props.reusableBlock ) {\n\t\t\t\texists = false;\n\t\t\t}\n\t\t\t\n\t\t\t// Display or fetch.\n\t\t\tif( exists ) {\n\t\t\t\tthis.display()\n\t\t\t} else {\n\t\t\t\tthis.fetch();\n\t\t\t}\n\t\t}\n\t\t\n\t\tcomponentDidInitialize() {\n\t\t\tacf.doAction( 'append', this.data.$el );\n\t\t}\n\t\t\n\t\tcomponentWillUnmount() {\n\t\t\tacf.doAction( 'unmount', this.data.$el );\n\t\t}\n\t\t\n\t\tcomponentDidRemount() {\n\t\t\tacf.doAction( 'remount', this.data.$el );\n\t\t\tacf.doAction( 'refresh', this.data.$el );\n\t\t}\n\t\t\n\t\tcomponentDidRender() {\n\t\t\t// Do nothing.\n\t\t}\n\t\t\n\t\tfetch() {\n\t\t\t// Do nothing.\n\t\t}\n\t}\n\t\n\t/**\n\t * BlockForm Class.\n\t *\n\t * A react componenet to handle the block form.\n\t *\n\t * @date\t19/2/19\n\t * @since\t5.7.12\n\t *\n\t * @param\tstring id the block id.\n\t * @return\tvoid\n\t */\n\tclass BlockForm extends DynamicHTML {\n\t\t\n\t\tsetup( props ) {\n\t\t\tthis.id = `BlockForm-${props.attributes.id}`;\n\t\t}\n\t\t\n\t\tfetch() {\n\t\t\t\n\t\t\t// Extract props.\n\t\t\tconst { attributes } = this.props;\n\t\t\t\n\t\t\t// Fetch.\n\t\t\tfetchBlock( attributes, {\n\t\t\t\tform: true\n\t\t\t}).done( ( json ) => {\n\t\t\t\tthis.setHtml( json.data.form );\n\t\t\t});\n\t\t}\n\t\t\n\t\tcomponentDidInitialize() {\n\t\t\t\n\t\t\t// Call super.\n\t\t\tsuper.componentDidInitialize();\n\t\t\t\n\t\t\t// Extract props.\n\t\t\tconst { attributes, setAttributes } = this.props;\n\t\t\tconst { $el } = this.data;\n\t\t\t\n\t\t\t// Add events.\n\t\t\tlet timeout = false;\n\t\t\t$el.on( 'change keyup', (e) => {\n\t\t\t\tclearTimeout( timeout );\n\t\t\t\ttimeout = setTimeout(() => { \n\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\tdata: acf.serialize( $el, `acf-${attributes.id}` ),\n\t\t\t\t\t});\n\t\t\t\t}, 300 );\n\t\t\t});\n\t\t}\n\t}\n\t\n\t/**\n\t * BlockPreview Class.\n\t *\n\t * A react componenet to handle the block preview.\n\t *\n\t * @date\t19/2/19\n\t * @since\t5.7.12\n\t *\n\t * @param\tstring id the block id.\n\t * @return\tvoid\n\t */\n\tclass BlockPreview extends DynamicHTML {\n\t\t\n\t\tsetup( props ) {\n\t\t\tthis.id = `BlockPreview-${props.attributes.id}`;\n\t\t}\n\t\t\n\t\tfetch() {\n\t\t\t\n\t\t\t// Extract props.\n\t\t\tconst { attributes } = this.props;\n\t\t\t\n\t\t\t// Remember attirbutes used to fetch HTML.\n\t\t\tthis.setData({\n\t\t\t\tattributes: attributes\n\t\t\t});\n\t\t\t\n\t\t\t// Fetch.\n\t\t\tfetchBlock( attributes, {\n\t\t\t\tpreview: true\n\t\t\t}).done( ( json ) => {\n\t\t\t\tthis.setHtml( json.data.preview );\n\t\t\t});\n\t\t}\n\t\t\n\t\tcomponentDidUpdate( prevProps ) {\n\t\t\t\n\t\t\t// Update preview if data has changed.\n\t\t\tconst prevJSON = JSON.stringify( prevProps.attributes );\n\t\t\tconst thisJSON = JSON.stringify( this.props.attributes );\n\t\t\tif( prevJSON !== thisJSON ) {\n\t\t\t\tthis.fetch();\n\t\t\t}\n\t\t}\n\t\t\n\t\tcomponentDidRender() {\n\t\t\t\n\t\t\t// Call Super.\n\t\t\tsuper.componentDidRender();\n\t\t\t\n\t\t\t// Do action.\n\t\t\tacf.doAction( 'render_block_preview', this.data.$el, this.props.attributes );\n\t\t}\n\t\t\n\t\tcomponentDidRemount() {\n\t\t\t\n\t\t\t// Call Super.\n\t\t\tsuper.componentDidRemount();\n\t\t\t\n\t\t\t// Update preview if data has changed since last render (changing from \"edit\" to \"preview\").\n\t\t\tconst prevJSON = JSON.stringify( this.data.attributes );\n\t\t\tconst thisJSON = JSON.stringify( this.props.attributes );\n\t\t\tif( prevJSON !== thisJSON ) {\n\t\t\t\tthis.fetch();\n\t\t\t}\n\t\t}\n\t}\n\t\n})(jQuery);"]}